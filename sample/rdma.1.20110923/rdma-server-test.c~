#include "rdma-server.h"


int main(int argc, char **argv) {
  struct RDMA_communicator comm;
  char *data;
  int size;
  int ctl_tag;

  RDMA_Passive_Init(&comm);
  while (1) {
    RDMA_Recvr(&data, &size, &ctl_tag, &comm);
    if (ctl_tag == TRANSFER_INIT) {
      s = get_dtime();
      printf("%d: size=%lu: %s\n", ctl_tag, size, data);
      file_tag = atoi(strtok(data, "\t"));
      id = get_index(file_tag);
      fp[id].tag = file_tag;
      fp[id].fd = open(strtok(NULL, "\t"), O_WRONLY | O_CREAT);
      fp[id].flag = 1;
    } else if (ctl_tag == TRANSFER_FIN) {
      printf("%d: size=%lu: %s\n", ctl_tag, size, data);
      file_tag = atoi(strtok(data, "\t"));
      id = get_index(file_tag);
      fp[id].tag = -1;
      close(fp[id].fd);
      fp[id].flag = 0;
      e = get_dtime();
      printf("time: %f\n", e - s);
    } else {
      printf("%d: size=%lu\n", ctl_tag, size);
      id = get_index(file_tag);
      write(fp[id].fd, data, size);
      free(data);
    }
  }
  //  RDMA_show_buffer();  
  return 0;
}
